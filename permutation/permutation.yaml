name: permutation
source code: |-
  # Adds 1 to a binary number.
  input: 'abcbcca'
  blank: B
  start state: q0
  table:
  #Procura por 'a' para colocar X
    q0:
      [b,c]: R
      a : {write: X, R: q1}
      #Se não achar, acabou os 'a's e vai para q3
      [M,B] : {L: q3}
    #Marca um M, simbolizando mais um 'a' encontrado
    q1:
      [a,b,c,M]     : R
      B : {write: M, L: q2}
    #Volta para o ultimo 'a' encontrado que é um X e volta para o estado inicial
    q2:
      [a,b,c,M]     : L
      X    : {R: q0}
    #Volta para o inicio, marcando os visitados como marcados
    q3:
      [b,c,X]     : L
      B : {R: qb}
    #Procura um b
    qb:
      [X,c]: R
      b: {write: Y, R: q4}
      [V,B]: {R: q6}
    #Marca em um M que contamos um 'b'
    q4:
      [X,b,c,V]: R
      M: {write: V, L: q5}
      #Caso encontre um B, há mais 'b' que 'a' -> erro
    #Volta para o ultimo 'b' encontrado que é um Y
    q5:
      [b,c,V,X]: L
      Y: {write: X, R: qb}
    #Verifica os b's
    q6:
      V: R
      B: {L: q7}
    #Reinicia os V's e vai verificar os c's
    q7:
      [c,X]     : L
      V: {write: M, L}
      B : {R: qc}
    #Procura um c
    qc:
      X: R
      c: {write: Y, R: q8}
      [V,B]: {R: q10}
    #Marca em um M que contamos um c
    q8:
      [X,c,V]: R
      M: {write: V, L: q9}
      #Caso encontre um B, há mais 'b' que 'a' -> erro
    #Volta para o ultimo 'c' encontrado que é um Y
    q9:
      [c,V,X]: L
      Y: {write: X, R: qc}
    #Confere os c's
    q10:
      V: R
      B: {L: aceita}
    aceita:
    
positions:
  q0: {x: 695.51, y: 191.99}
  q1: {x: 780, y: 152.17}
  q2: {x: 777.03, y: 262.37}
  q3: {x: 610.06, y: 185.23}
  qb: {x: 532.64, y: 180.56}
  q4: {x: 580.45, y: 302.13}
  q5: {x: 473.83, y: 309.95}
  q6: {x: 439.11, y: 183.48}
  q7: {x: 375.16, y: 181.61}
  qc: {x: 268.61, y: 182.4}
  q8: {x: 338.19, y: 305.18}
  q9: {x: 228.25, y: 304.15}
  q10: {x: 165.46, y: 189.21}
  aceita: {x: 65.58, y: 193.2}
